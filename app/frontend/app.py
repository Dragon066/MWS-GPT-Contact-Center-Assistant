from urllib.parse import unquote

import requests
import streamlit as st


def main():
    st.set_page_config(page_title="–ß–∞—Ç —Å –∫–ª–∏–µ–Ω—Ç–æ–º", page_icon="üí¨", layout="wide")

    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
    query_params = st.query_params
    chat_id = query_params.get("id", [None])[0]
    operator_name = unquote(query_params.get("operatorName", [""]))
    operator_position = unquote(query_params.get("operatorPosition", [""]))

    if not chat_id:
        st.error("–ù–µ —É–∫–∞–∑–∞–Ω ID —á–∞—Ç–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö URL")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –∏–∑ –ë–î
    chat_history = requests.get(f"http://crm:8003/api/chat?id_chat={chat_id}").json()

    if not chat_history:
        st.error(f"–ß–∞—Ç —Å ID {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    with st.sidebar:
        st.header("–û–ø–µ—Ä–∞—Ç–æ—Ä")
        if operator_name:
            st.write(f"**–ò–º—è:** {operator_name}")
            st.write(f"**–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {operator_position}")
        else:
            st.warning("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–µ—Ä–∞—Ç–æ—Ä–µ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")

        st.divider()

        st.header("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ")
        st.write(f"**ID —á–∞—Ç–∞:** {chat_id}")
        st.write("**–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è:** chat/email")

        st.divider()

        st.header("–î–µ–π—Å—Ç–≤–∏—è")
        if st.button("–ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω–æ–µ"):
            r = requests.get(f"http://crm:8003/api/mark_as_solved?id_chat={chat_id}")
            st.success("–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω")

    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ - –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
    st.title(f"–ß–∞—Ç #{chat_id}")

    for message in chat_history:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if message["role"] == "user":
            with st.chat_message("user"):
                st.write(message["content"])
                st.caption(f"{message['created_at']} (–∫–ª–∏–µ–Ω—Ç)")
        else:
            with st.chat_message("assistant"):
                st.write(message["content"])
                st.caption(f"{message['created_at']} (–æ–ø–µ—Ä–∞—Ç–æ—Ä)")

    # –§–æ—Ä–º–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    with st.form("reply_form"):
        reply_text = st.text_area("–í–∞—à –æ—Ç–≤–µ—Ç", height=100)
        submitted = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")
        if submitted and reply_text:
            r = requests.get(
                f"http://crm:8003/api/push_record?id={chat_id}&type={'chat'}&content={reply_text}&role=assistent"
            )
            st.success("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            st.rerun()


if __name__ == "__main__":
    main()
